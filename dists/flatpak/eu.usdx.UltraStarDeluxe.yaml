id: eu.usdx.UltraStarDeluxe
branch: master
runtime: org.freedesktop.Platform
sdk: org.freedesktop.Sdk
# reduce to 18.08 for x86-32 and 19.08 for arm32:
runtime-version: '20.08'
separate-locales: false
appstream-compose: true
rename-appdata-file: ultrastardx.appdata.xml
rename-desktop-file: ultrastardx.desktop
rename-icon: ultrastardx
command: ultrastardx

finish-args:
- --socket=wayland
- --socket=fallback-x11
- --socket=x11
- --socket=pulseaudio
- --device=all
- --filesystem=~/.java/.userPrefs/PortMidi:ro
- --persist=.ultrastardx
# Workaround for SDL2 in 18.08 runtime failing if it can't connect to both busses:
- --socket=system-bus

cleanup:
- /include
- /lib/cmake
- /lib/pkgconfig
- "/lib/*.so"
- "/lib/*.la"
- setup_vars_opencv4.sh

cleanup-commands:
- rm -Rf /var/tmp/fpc

add-extensions:
  eu.usdx.UltraStarDeluxe.Songs:
    directory: share/ultrastardx/songs
    subdirectories: true
    no-autodownload: true

  eu.usdx.UltraStarDeluxe.Themes:
    directory: theme-extensions
    merge-dirs: share/ultrastardx/themes
    subdirectories: true
    no-autodownload: true

modules:
- name: opencv
  sources:
  - type: archive
    url: https://github.com/opencv/opencv/archive/4.5.4.tar.gz
    sha256: c20bb83dd790fc69df9f105477e24267706715a9d3c705ca1e7f613c7b3bad3d
  buildsystem: cmake-ninja
  builddir: true
  build-options:
    config-opts:
    - -DCMAKE_BUILD_TYPE=Release
    - -DOPENCV_GENERATE_PKGCONFIG=ON
    - -DBUILD_TESTS=OFF
    - -DBUILD_opencv_apps=OFF
    - -DBUILD_opencv_calib3d=OFF
    - -DBUILD_opencv_dnn=OFF
    - -DBUILD_opencv_features2d=OFF
    - -DBUILD_opencv_flann=OFF
    - -DBUILD_opencv_gapi=OFF
    - -DBUILD_opencv_highgui=OFF
    - -DBUILD_opencv_java_bindings_generator=OFF
    - -DBUILD_opencv_ml=OFF
    - -DBUILD_opencv_objdetect=OFF
    - -DBUILD_opencv_photo=OFF
    - -DBUILD_opencv_python2=OFF
    - -DBUILD_opencv_python_bindings_generator=OFF
    - -DBUILD_opencv_python_tests=OFF
    - -DBUILD_opencv_stitching=OFF
    - -DBUILD_opencv_ts=OFF
    - -DBUILD_opencv_video=OFF
    - -DCV_TRACE=OFF
    - -DWITH_PROTOBUF=OFF
    - -DWITH_FFMPEG=OFF
    - -DWITH_ADE=OFF
    - -DWITH_QUIRC=OFF
    - -DWITH_GTK=OFF
    - -DWITH_TIFF=OFF
    - -DWITH_WEBP=OFF
    - -DWITH_JASPER=OFF
    - -DWITH_OPENJPEG=OFF
    - -DWITH_PNG=OFF
    - -DWITH_OPENEXR=OFF
    - -DWITH_GDAL=OFF
    - -DWITH_GDCM=OFF
    - -DWITH_IMGCODEC_HDR=OFF
    - -DWITH_IMGCODEC_SUNRASTER=OFF
    - -DWITH_IMGCODEC_PXM=OFF
    - -DWITH_IMGCODEC_PFM=OFF
  cleanup:
  - /share/opencv4/*cascades
  - /share/opencv4/valgrind*.supp

- name: projectm
  sources:
  - type: archive
    url: https://github.com/projectM-visualizer/projectm/releases/download/v2.2.1/projectM-2.2.1.tar.gz
    sha256: 9bbb33c5ba048537e97ea5ba2bd9fef76972c881597599a272b0194ec1d5f2a3
  - type: patch
    paths:
    - patches/projectM-2.2.1.patch
  buildsystem: autotools
  rm-configure: true
  config-opts:
  - --disable-static
  post-install:
  - "f=$(fc-match -f '%{file}' sans) ; sed -i \"/Title Font/s:=.*:= $f:\" ${FLATPAK_DEST}/share/projectM/config.inp"
  - "f=$(fc-match -f '%{file}' monospace) ; sed -i \"/Menu Font/s:=.*:= $f:\" ${FLATPAK_DEST}/share/projectM/config.inp"
  cleanup:
  - /share/projectM/fonts
  - /bin

- name: lua
  sources:
  - type: archive
    url: https://www.lua.org/ftp/lua-5.4.3.tar.gz
    sha256: f8612276169e3bfcbcfb8f226195bfc6e466fe13042f1076cbde92b7ec96bbfb
  buildsystem: simple
  build-commands:
  - sed -i "s:\(#define LUA_ROOT\>\).*:\1 \"${FLATPAK_DEST}\":" src/luaconf.h
  - echo export V R >> Makefile
  - make INSTALL_TOP=${FLATPAK_DEST} MYCFLAGS="-DLUA_COMPAT_5_3 -DLUA_COMPAT_5_2 -DLUA_COMPAT_5_1 ${CFLAGS} -fPIC" LUA_A='liblua.so.$(R)' AR='$(CC) -shared -ldl -lm -Wl,-soname,liblua.so.$(V) -o' RANLIB=true ALL='$(LUA_A)' linux
  - make INSTALL_TOP=${FLATPAK_DEST} TO_LIB='liblua.so.$(R)' INSTALL_EXEC=true INSTALL_BIN= install
  - cd ${FLATPAK_DEST}/lib && ln -s liblua.so.* liblua.so
  - ldconfig -l ${FLATPAK_DEST}/lib/liblua.so.*
  - mkdir -p ${FLATPAK_DEST}/lib/pkgconfig
  - make -s INSTALL_TOP=${FLATPAK_DEST} pc > ${FLATPAK_DEST}/lib/pkgconfig/lua.pc
  - "echo 'Name: Lua' >> ${FLATPAK_DEST}/lib/pkgconfig/lua.pc"
  - "echo 'Description: An Extensible Language' >> ${FLATPAK_DEST}/lib/pkgconfig/lua.pc"
  - "echo 'Version: ${version}' >> ${FLATPAK_DEST}/lib/pkgconfig/lua.pc"
  - "echo 'Requires:' >> ${FLATPAK_DEST}/lib/pkgconfig/lua.pc"
  - "echo 'Libs: -L${libdir} -llua' >> ${FLATPAK_DEST}/lib/pkgconfig/lua.pc"
  - "echo 'Cflags: -I${includedir}' >> ${FLATPAK_DEST}/lib/pkgconfig/lua.pc"
  cleanup:
  - /man

- name: portmidi
  sources:
  - type: archive
    url: https://sourceforge.net/projects/portmedia/files/portmidi/217/portmidi-src-217.zip
    sha256: 08e9a892bd80bdb1115213fb72dc29a7bf2ff108b378180586aa65f3cfd42e0f
  - type: shell
    commands:
    - find -type f | while read a ; do tr -d '\r' < "$a" > /tmp/t && cat /tmp/t > "$a" ; done
  - type: patch
    paths:
# Patches taken from Debian portmidi 217-6
    - patches/00_cmake.diff
    - patches/02_pmlinuxalsa.diff
    - patches/03_pm_test_Makefile.diff
    - patches/11-pmlinuxalsa.patch
    - patches/13-disablejni.patch
    - patches/20-movetest.diff
    - patches/21-hardentests.diff
    - patches/30-porttime_cmake.diff
    - patches/40-test_sysex.diff
    - patches/41-pm_linux.diff
    - patches/50-change_assert.diff
    - patches/51-remove_assert.diff
  buildsystem: cmake-ninja
  config-opts:
  - -DCMAKE_BUILD_TYPE=Release
  cleanup:
  - "*.a"
  - "libporttime.*"

- name: dav1d
  disabled: true # set to false for runtime < 19.08 or if you are unhappy with the version in runtime
  sources:
  - type: archive
    url: https://downloads.videolan.org/pub/videolan/dav1d/0.9.2/dav1d-0.9.2.tar.xz
    sha256: e3235ab6c43c0135b0db1d131e1923fad4c84db9d85683e30b91b33a52d61c71
  buildsystem: meson
  config-opts:
  - -Denable_tools=false
  - -Denable_tests=false

- name: ffmpeg
  disabled: false
  sources:
  - type: archive
    url: http://ffmpeg.org/releases/ffmpeg-4.4.1.tar.xz
    sha256: eadbad9e9ab30b25f5520fbfde99fae4a92a1ae3c0257a8d68569a4651e30e02
# not really, but close enough:
  buildsystem: autotools
  config-opts:
  - --enable-gpl
  - --disable-static
  - --enable-shared
  - --disable-programs
  - --disable-doc
  - --disable-encoders
  - --disable-xlib
  - --disable-network
  - --disable-stripping
  - --disable-avdevice
  - --disable-postproc
  - --disable-muxers
  - --disable-avfilter
  - --disable-protocols
  - --disable-vaapi
  - --disable-vdpau
  - --enable-libdav1d
  cleanup:
  - /share/ffmpeg/examples

- name: freepascal
  sources:
# binaries for sparc and mips exist as well
  - type: archive
    only-arches:
    - i386
    url: https://sourceforge.net/projects/freepascal/files/Linux/3.2.2/fpc-3.2.2.i386-linux.tar
    mirror-urls:
    - ftp://ftp.hu.freepascal.org/pub/fpc/dist/3.2.2/i386-linux/fpc-3.2.2.i386-linux.tar
    - ftp://mirror.freemirror.org/pub/fpc/dist/3.2.2/i386-linux/fpc-3.2.2.i386-linux.tar
    sha256: f62980ac0b2861221f79fdbff67836aa6912a4256d4192cfa4dfa0ac5b419958

  - type: archive
    only-arches:
    - arm
    url: https://sourceforge.net/projects/freepascal/files/Linux/3.2.2/fpc-3.2.2.arm-linux.tar
    mirror-urls:
    - ftp://ftp.hu.freepascal.org/pub/fpc/dist/3.2.2/arm-linux/fpc-3.2.2.arm-linux.tar
    - ftp://mirror.freemirror.org/pub/fpc/dist/3.2.2/arm-linux/fpc-3.2.2.arm-linux.tar
    sha256: 971bbcaa1934286ccdaf3998d338afc19a33235e910f8881c75579ed5d6adefd

  - type: archive
    only-arches:
    - x86_64
    url: https://sourceforge.net/projects/freepascal/files/Linux/3.2.2/fpc-3.2.2.x86_64-linux.tar
    mirror-urls:
    - ftp://ftp.hu.freepascal.org/pub/fpc/dist/3.2.2/x86_64-linux/fpc-3.2.2.x86_64-linux.tar
    - ftp://mirror.freemirror.org/pub/fpc/dist/3.2.2/x86_64-linux/fpc-3.2.2.x86_64-linux.tar
    sha256: 5adac308a5534b6a76446d8311fc340747cbb7edeaacfe6b651493ff3fe31e83

  - type: archive
    only-arches:
    - aarch64
    url: https://sourceforge.net/projects/freepascal/files/Linux/3.2.2/fpc-3.2.2.aarch64-linux.tar
    mirror-urls:
    - ftp://ftp.hu.freepascal.org/pub/fpc/dist/3.2.2/aarch64-linux/fpc-3.2.2.aarch64-linux.tar
    - ftp://mirror.freemirror.org/pub/fpc/dist/3.2.2/aarch64-linux/fpc-3.2.2.aarch64-linux.tar
    sha256: b39470f9b6b5b82f50fc8680a5da37d2834f2129c65c24c5628a80894d565451

  - type: archive
    only-arches:
    - ppc64le
    url: https://sourceforge.net/projects/freepascal/files/Linux/3.2.2/fpc-3.2.2.powerpc64le-linux.tar
    mirror-urls:
    - ftp://ftp.hu.freepascal.org/pub/fpc/dist/3.2.2/powerpc64le-linux/fpc-3.2.2.powerpc64le-linux.tar
    - ftp://mirror.freemirror.org/pub/fpc/dist/3.2.2/powerpc64le-linux/fpc-3.2.2.powerpc64le-linux.tar
    sha256: 83c57d7caecfaa69fe817f6d26750aa3a08c5436f7c64bf87dead81d62a5e38a

  - type: shell
    commands:
# We can use neither /etc/fpc.cfg nor ~/.fpc.cfg, but luckily fpc also looks below $PREFIX
    - sed -i '/\/samplecfg/s%LIBDIR"%& "$PREFIX/lib/fpc/etc"%' install.sh
  buildsystem: simple
  build-commands:
  - ( echo /var/tmp/fpc ; yes N ) | ./install.sh
# fpcmkcfg tries to determine the GCC directory only on x86-* and ppc*
  - "set -- `gcc -print-file-name=crtbegin.o` ; echo -Fl${1%/*} >> /var/tmp/fpc/lib/fpc/etc/fpc.cfg"
# On x86-64 and ppc64 fpc looks in /usr/lib64 instead of /usr/lib
  - echo -Fl/usr/lib >> /var/tmp/fpc/lib/fpc/etc/fpc.cfg

- name: ultrastardx
  sources:
# - type: git
#   url: https://github.com/UltraStar-Deluxe/USDX.git
#   branch: master
  - type: dir
    path: ../../
  - type: shell
    commands:
# We are passed in some linker flags suitable for gcc, but fpc directly calls ld
    - sed -i '1iCOMMA=,' src/Makefile.in
    - sed -i 's/$(LDFLAGS)/$(subst $(COMMA), ,$(patsubst -Wl%,%,&))/' src/Makefile.in
# Icons and desktop file are not installed automatically
    - sed -i '/^install-data:/a\\t$(INSTALL_DATA) -D dists/ultrastardx.appdata.xml $(datarootdir)/appdata/ultrastardx.appdata.xml' Makefile.in
    - sed -i '/^install-data:/a\\t$(INSTALL_DATA) -D dists/ultrastardx.desktop $(datarootdir)/applications/ultrastardx.desktop' Makefile.in
    - sed -i '/^install-data:/a\\t$(INSTALL_DATA) -D icons/ultrastardx-icon.svg $(datarootdir)/icons/hicolor/scalable/apps/ultrastardx.svg' Makefile.in
    - sed -i '/^install-data:/a\\t$(INSTALL_DATA) -D icons/ultrastardx-icon_32.png $(datarootdir)/icons/hicolor/32x32/apps/ultrastardx.png' Makefile.in
    - sed -i '/^install-data:/a\\t$(INSTALL_DATA) -D icons/ultrastardx-icon_256.png $(datarootdir)/icons/hicolor/256x256/apps/ultrastardx.png' Makefile.in
    - sed -i '/^install-data:/a\\t$(INSTALL_DATA) -D icons/ultrastardx-icon_512.png $(datarootdir)/icons/hicolor/512x512/apps/ultrastardx.png' Makefile.in
    - "[ ! -e ${FLATPAK_DEST}/lib/pkgconfig/libavcodec.pc ] || sed -i 's:</description>:<p>Note that this flatpak contains a custom build of FFmpeg with patented algorithms enabled. You can rebuild the flatpak with the ffmpeg module disabled if this is a problem for you.</p>&:' dists/ultrastardx.appdata.xml"
  buildsystem: autotools
  build-options:
    prepend-path: /var/tmp/fpc/bin
  config-opts:
  - --with-libprojectM
  - --with-opencv-cxx-api
  - --enable-debug
  post-install:
  - "cd ${FLATPAK_DEST}/share/ultrastardx/fonts ; fc-scan -f '%{file} :fullname=%{fullname}\n' . | while read a b ; do a=${a#./} c=$(fc-list -f '%{file}\n' \"$b\" | head -n 1) ; if [ -n \"$c\" ] ; then sed -i \"s:=$a:=$c:\" fonts.ini ; rm \"$a\" ; fi ; done"
  - "for i in ${FLATPAK_DEST}/share/ultrastardx/fonts/*/ ; do [ -n \"$(fc-scan -f '%{file}' \"$i\" | head -n 1)\" ] || rm -Rf \"$i\" ; done"
